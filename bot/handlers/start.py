from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandStart
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession
import logging
import os

from ..models.base import async_session
from ..models.models import User, Restaurant
from ..keyboards.reply import get_main_menu
from ..keyboards.inline import get_start_kb

router = Router()

# –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
ADMIN_USERNAME = os.getenv("ADMIN_USERNAME", "LoveRestaurantAdmin")

@router.message(CommandStart())
async def start_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    logging.info(f"Start command received from user {message.from_user.id} (@{message.from_user.username or 'no_username'})")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ (–∏–Ω–≤–∞–π—Ç-–∫–æ–¥–∞)
    args = message.text.split()
    invite_code = None
    
    if len(args) > 1:
        invite_code = args[1]
        logging.info(f"Invite code detected: {invite_code}")
    
    async with async_session() as session:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
        result = await session.execute(select(User).where(User.telegram_id == message.from_user.id))
        user = result.scalar_one_or_none()
        
        if not user:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = User(telegram_id=message.from_user.id)
            session.add(user)
            await session.commit()
            logging.info(f"New user created: {message.from_user.id}")
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω–≤–∞–π—Ç-–∫–æ–¥, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É
        if invite_code:
            result = await session.execute(select(Restaurant).where(Restaurant.invite_code == invite_code))
            restaurant = result.scalar_one_or_none()
            
            if restaurant:
                # –ü–æ–¥–∫–ª—é—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É
                user.current_restaurant_id = restaurant.id
                await session.commit()
                logging.info(f"User {message.from_user.id} connected to restaurant {restaurant.id} ({restaurant.name})")
                
                await message.answer(
                    f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É '{restaurant.name}'!\n"
                    f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –º–µ–Ω—é –∏ –¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑—ã.",
                    reply_markup=get_main_menu()
                )
                return
            else:
                logging.warning(f"Invalid invite code used: {invite_code}")
                await message.answer(
                    "–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–¥ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                    reply_markup=get_main_menu()
                )
                return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Love Restaurant!\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω –ª—é–±–≤–∏, "
        "–≥–¥–µ –≤–∞–ª—é—Ç–æ–π —Å–ª—É–∂–∞—Ç –ø–æ—Ü–µ–ª—É–∏ –∏ –æ–±–Ω–∏–º–∞—à–∫–∏.",
        reply_markup=get_main_menu(user)
    )

@router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
@router.message(Command("help"))
async def help_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help –∏ –∫–Ω–æ–ø–∫–∏ –ü–æ–º–æ—â—å"""
    logging.info(f"Help command received from user {message.from_user.id}")
    
    await message.answer(
        "üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É Love Restaurant:\n\n"
        "üçΩ <b>–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞</b>\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–°–æ–∑–¥–∞—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω' –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.\n\n"
        "üîó <b>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É</b>\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∏–ª–∏ —Å—Å—ã–ª–∫—É –æ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞.\n\n"
        "üìã <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é</b>\n"
        "–í–ª–∞–¥–µ–ª—å—Ü—ã —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —É–¥–∞–ª—è—Ç—å –ø–æ–∑–∏—Ü–∏–∏ –≤ –º–µ–Ω—é.\n\n"
        "üíã <b>–í–∞–ª—é—Ç–∞</b>\n"
        "–í –Ω–∞—à–∏—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞—Ö —Ä–∞—Å–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è –ø–æ—Ü–µ–ª—É—è–º–∏ –∏ –º–∏–Ω—É—Ç–∞–º–∏ –æ–±–Ω–∏–º–∞—à–µ–∫.\n\n"
        "üõí <b>–ó–∞–∫–∞–∑—ã</b>\n"
        "–í—ã–±–∏—Ä–∞–π—Ç–µ –ø–æ–∑–∏—Ü–∏–∏, –¥–æ–±–∞–≤–ª—è–π—Ç–µ –∏—Ö –≤ –∫–æ—Ä–∑–∏–Ω—É –∏ –æ—Ñ–æ—Ä–º–ª—è–π—Ç–µ –∑–∞–∫–∞–∑.\n\n"
        "‚ùì <b>–ö–æ–º–∞–Ω–¥—ã</b>\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        f"–ï—Å–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <a href='https://t.me/{ADMIN_USERNAME}'>–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É</a>.",
        parse_mode="HTML",
        disable_web_page_preview=True
    )

# –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
# @router.callback_query(F.data == "help")
# async def help_callback(callback: CallbackQuery):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–º–æ—â—å'"""
#     ...
# 
# @router.callback_query(F.data == "start")
# async def start_callback(callback: CallbackQuery):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞—á–∞—Ç—å'"""
#     ...